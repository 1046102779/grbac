// Code generated by protoc-gen-go.
// source: account.proto
// DO NOT EDIT!

/*
Package igrpc is a generated protocol buffer package.

It is generated from these files:
	account.proto
	address.proto
	common.proto
	finance.proto
	grbac.proto
	image.proto
	message.proto
	product.proto
	sale.proto
	sms.proto
	storage.proto
	token.proto

It has these top-level messages:
	User
	UserInfo
	Users
	Company
	CompanyIds
	StorageEnableInfo
	ShopInfo
	ChuanglanSmsInfo
	ChuanglanConfInfo
	YunpianConfInfo
	SmsRechargeInfo
	FabricPatternPayInfo
	WechatJSAPIParamInfo
	WechatNativeParamInfo
	UserOpenidInfo
	GrbacUserRel
	GrbacUserRels
	CompanyAndOfficialAccountRel
	Address
	Reply
	Integer32
	Integer64
	String
	Bool
	KeyValue
	Finance
	FinanceAccount
	UserRole
	Role
	PictureRequest
	PictureReply
	Picture
	SaleOrderTemplateMessage
	SmsMessage
	EmailMessage
	Message
	ColorPatternRelationship
	ColorPatternRelationshipsResp
	FabricPattern
	ColorInfo
	Colors
	FabricPatternInfo
	SaleOrder
	WarehouseManagerMessage
	WarehouseManagers
	ShopMessage
	ManagerAccount
	TurnoverStatistics
	GeneralMangerMessage
	GeneralMangerMessages
	CodeRequest
	CodeReply
	MobileInfo
	ContentInfo
	SmsRequest
	SmsRechargeOrderInfo
	Warehouse
	AreaShelfInfo
	InventoryRequest
	InvetoryPatternColorRel
	InventoryResponse
	CandidateInventoryStatsInfo
	CandidateInventoryStats
	SelectInventoryInfo
	OfficialAccountPlatform
	OfficialAccount
	ComponentVerifyTicket
*/
package igrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	UserId      int64  `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	Type        int64  `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	RelOrgId    int64  `protobuf:"varint,3,opt,name=RelOrgId" json:"RelOrgId,omitempty"`
	SubType     int64  `protobuf:"varint,4,opt,name=SubType" json:"SubType,omitempty"`
	Code        string `protobuf:"bytes,5,opt,name=Code" json:"Code,omitempty"`
	Name        string `protobuf:"bytes,6,opt,name=Name" json:"Name,omitempty"`
	CompanyId   int64  `protobuf:"varint,7,opt,name=CompanyId" json:"CompanyId,omitempty"`
	Response    *Reply `protobuf:"bytes,8,opt,name=Response" json:"Response,omitempty"`
	Mobile      string `protobuf:"bytes,9,opt,name=Mobile" json:"Mobile,omitempty"`
	CompanyName string `protobuf:"bytes,10,opt,name=CompanyName" json:"CompanyName,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *User) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *User) GetRelOrgId() int64 {
	if m != nil {
		return m.RelOrgId
	}
	return 0
}

func (m *User) GetSubType() int64 {
	if m != nil {
		return m.SubType
	}
	return 0
}

func (m *User) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetCompanyId() int64 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

func (m *User) GetResponse() *Reply {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *User) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *User) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

type UserInfo struct {
	UserId   int32  `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	Type     int32  `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	RelOrgId int32  `protobuf:"varint,3,opt,name=RelOrgId" json:"RelOrgId,omitempty"`
	SubType  int32  `protobuf:"varint,4,opt,name=SubType" json:"SubType,omitempty"`
	Code     string `protobuf:"bytes,5,opt,name=Code" json:"Code,omitempty"`
	Name     string `protobuf:"bytes,6,opt,name=Name" json:"Name,omitempty"`
	Email    string `protobuf:"bytes,7,opt,name=Email" json:"Email,omitempty"`
	Mobile   string `protobuf:"bytes,9,opt,name=Mobile" json:"Mobile,omitempty"`
	Password string `protobuf:"bytes,10,opt,name=Password" json:"Password,omitempty"`
	Desc     string `protobuf:"bytes,11,opt,name=Desc" json:"Desc,omitempty"`
	Status   int32  `protobuf:"varint,12,opt,name=Status" json:"Status,omitempty"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserInfo) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserInfo) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UserInfo) GetRelOrgId() int32 {
	if m != nil {
		return m.RelOrgId
	}
	return 0
}

func (m *UserInfo) GetSubType() int32 {
	if m != nil {
		return m.SubType
	}
	return 0
}

func (m *UserInfo) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserInfo) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserInfo) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *UserInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type Users struct {
	Users []*User `protobuf:"bytes,1,rep,name=Users" json:"Users,omitempty"`
}

func (m *Users) Reset()                    { *m = Users{} }
func (m *Users) String() string            { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()               {}
func (*Users) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Users) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type Company struct {
	CompanyId int32  `protobuf:"varint,1,opt,name=CompanyId" json:"CompanyId,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Response  *Reply `protobuf:"bytes,3,opt,name=Response" json:"Response,omitempty"`
}

func (m *Company) Reset()                    { *m = Company{} }
func (m *Company) String() string            { return proto.CompactTextString(m) }
func (*Company) ProtoMessage()               {}
func (*Company) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Company) GetCompanyId() int32 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

func (m *Company) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Company) GetResponse() *Reply {
	if m != nil {
		return m.Response
	}
	return nil
}

type CompanyIds struct {
	CompanyId []int64 `protobuf:"varint,1,rep,packed,name=CompanyId" json:"CompanyId,omitempty"`
}

func (m *CompanyIds) Reset()                    { *m = CompanyIds{} }
func (m *CompanyIds) String() string            { return proto.CompactTextString(m) }
func (*CompanyIds) ProtoMessage()               {}
func (*CompanyIds) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CompanyIds) GetCompanyId() []int64 {
	if m != nil {
		return m.CompanyId
	}
	return nil
}

// 指定公司库存启用状态
type StorageEnableInfo struct {
	CompanyId int64  `protobuf:"varint,1,opt,name=CompanyId" json:"CompanyId,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	IsEnabled bool   `protobuf:"varint,3,opt,name=IsEnabled" json:"IsEnabled,omitempty"`
}

func (m *StorageEnableInfo) Reset()                    { *m = StorageEnableInfo{} }
func (m *StorageEnableInfo) String() string            { return proto.CompactTextString(m) }
func (*StorageEnableInfo) ProtoMessage()               {}
func (*StorageEnableInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *StorageEnableInfo) GetCompanyId() int64 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

func (m *StorageEnableInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StorageEnableInfo) GetIsEnabled() bool {
	if m != nil {
		return m.IsEnabled
	}
	return false
}

// 商铺地点信息
type ShopInfo struct {
	Id   int64  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=Code" json:"Code,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
}

func (m *ShopInfo) Reset()                    { *m = ShopInfo{} }
func (m *ShopInfo) String() string            { return proto.CompactTextString(m) }
func (*ShopInfo) ProtoMessage()               {}
func (*ShopInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ShopInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopInfo) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ShopInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 该结构体既作为短信增量变化，也作为平台短信数量, 即为复用
type ChuanglanSmsInfo struct {
	PlatformVerificationCount int64 `protobuf:"varint,1,opt,name=PlatformVerificationCount" json:"PlatformVerificationCount,omitempty"`
	PlatformMarketingCount    int64 `protobuf:"varint,2,opt,name=PlatformMarketingCount" json:"PlatformMarketingCount,omitempty"`
	CompanySmsRemainingCount  int64 `protobuf:"varint,3,opt,name=CompanySmsRemainingCount" json:"CompanySmsRemainingCount,omitempty"`
	CompanyId                 int64 `protobuf:"varint,4,opt,name=CompanyId" json:"CompanyId,omitempty"`
}

func (m *ChuanglanSmsInfo) Reset()                    { *m = ChuanglanSmsInfo{} }
func (m *ChuanglanSmsInfo) String() string            { return proto.CompactTextString(m) }
func (*ChuanglanSmsInfo) ProtoMessage()               {}
func (*ChuanglanSmsInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ChuanglanSmsInfo) GetPlatformVerificationCount() int64 {
	if m != nil {
		return m.PlatformVerificationCount
	}
	return 0
}

func (m *ChuanglanSmsInfo) GetPlatformMarketingCount() int64 {
	if m != nil {
		return m.PlatformMarketingCount
	}
	return 0
}

func (m *ChuanglanSmsInfo) GetCompanySmsRemainingCount() int64 {
	if m != nil {
		return m.CompanySmsRemainingCount
	}
	return 0
}

func (m *ChuanglanSmsInfo) GetCompanyId() int64 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

type ChuanglanConfInfo struct {
	HttpApi              string `protobuf:"bytes,1,opt,name=HttpApi" json:"HttpApi,omitempty"`
	QueryBalanceHttpApi  string `protobuf:"bytes,2,opt,name=QueryBalanceHttpApi" json:"QueryBalanceHttpApi,omitempty"`
	VerificationAccount  string `protobuf:"bytes,3,opt,name=VerificationAccount" json:"VerificationAccount,omitempty"`
	VerificationPassword string `protobuf:"bytes,4,opt,name=VerificationPassword" json:"VerificationPassword,omitempty"`
	MarketingAccount     string `protobuf:"bytes,5,opt,name=MarketingAccount" json:"MarketingAccount,omitempty"`
	MarketingPassword    string `protobuf:"bytes,6,opt,name=MarketingPassword" json:"MarketingPassword,omitempty"`
	ReceiverHttpApi      string `protobuf:"bytes,7,opt,name=ReceiverHttpApi" json:"ReceiverHttpApi,omitempty"`
}

func (m *ChuanglanConfInfo) Reset()                    { *m = ChuanglanConfInfo{} }
func (m *ChuanglanConfInfo) String() string            { return proto.CompactTextString(m) }
func (*ChuanglanConfInfo) ProtoMessage()               {}
func (*ChuanglanConfInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ChuanglanConfInfo) GetHttpApi() string {
	if m != nil {
		return m.HttpApi
	}
	return ""
}

func (m *ChuanglanConfInfo) GetQueryBalanceHttpApi() string {
	if m != nil {
		return m.QueryBalanceHttpApi
	}
	return ""
}

func (m *ChuanglanConfInfo) GetVerificationAccount() string {
	if m != nil {
		return m.VerificationAccount
	}
	return ""
}

func (m *ChuanglanConfInfo) GetVerificationPassword() string {
	if m != nil {
		return m.VerificationPassword
	}
	return ""
}

func (m *ChuanglanConfInfo) GetMarketingAccount() string {
	if m != nil {
		return m.MarketingAccount
	}
	return ""
}

func (m *ChuanglanConfInfo) GetMarketingPassword() string {
	if m != nil {
		return m.MarketingPassword
	}
	return ""
}

func (m *ChuanglanConfInfo) GetReceiverHttpApi() string {
	if m != nil {
		return m.ReceiverHttpApi
	}
	return ""
}

type YunpianConfInfo struct {
	SingleApiKey    string `protobuf:"bytes,1,opt,name=SingleApiKey" json:"SingleApiKey,omitempty"`
	GroupApiKey     string `protobuf:"bytes,2,opt,name=GroupApiKey" json:"GroupApiKey,omitempty"`
	HttpApi         string `protobuf:"bytes,3,opt,name=HttpApi" json:"HttpApi,omitempty"`
	ReceiverHttpApi string `protobuf:"bytes,4,opt,name=ReceiverHttpApi" json:"ReceiverHttpApi,omitempty"`
}

func (m *YunpianConfInfo) Reset()                    { *m = YunpianConfInfo{} }
func (m *YunpianConfInfo) String() string            { return proto.CompactTextString(m) }
func (*YunpianConfInfo) ProtoMessage()               {}
func (*YunpianConfInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *YunpianConfInfo) GetSingleApiKey() string {
	if m != nil {
		return m.SingleApiKey
	}
	return ""
}

func (m *YunpianConfInfo) GetGroupApiKey() string {
	if m != nil {
		return m.GroupApiKey
	}
	return ""
}

func (m *YunpianConfInfo) GetHttpApi() string {
	if m != nil {
		return m.HttpApi
	}
	return ""
}

func (m *YunpianConfInfo) GetReceiverHttpApi() string {
	if m != nil {
		return m.ReceiverHttpApi
	}
	return ""
}

// SaaS平台短信充值信息
type SmsRechargeInfo struct {
	Money             int64  `protobuf:"varint,1,opt,name=Money" json:"Money,omitempty"`
	TradeNo           string `protobuf:"bytes,2,opt,name=TradeNo" json:"TradeNo,omitempty"`
	Openid            string `protobuf:"bytes,3,opt,name=Openid" json:"Openid,omitempty"`
	Title             string `protobuf:"bytes,4,opt,name=Title" json:"Title,omitempty"`
	OfficialAccountId int64  `protobuf:"varint,5,opt,name=OfficialAccountId" json:"OfficialAccountId,omitempty"`
}

func (m *SmsRechargeInfo) Reset()                    { *m = SmsRechargeInfo{} }
func (m *SmsRechargeInfo) String() string            { return proto.CompactTextString(m) }
func (*SmsRechargeInfo) ProtoMessage()               {}
func (*SmsRechargeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SmsRechargeInfo) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *SmsRechargeInfo) GetTradeNo() string {
	if m != nil {
		return m.TradeNo
	}
	return ""
}

func (m *SmsRechargeInfo) GetOpenid() string {
	if m != nil {
		return m.Openid
	}
	return ""
}

func (m *SmsRechargeInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SmsRechargeInfo) GetOfficialAccountId() int64 {
	if m != nil {
		return m.OfficialAccountId
	}
	return 0
}

// 面料支付参数信息
type FabricPatternPayInfo struct {
	Money             int64  `protobuf:"varint,1,opt,name=Money" json:"Money,omitempty"`
	TradeNo           string `protobuf:"bytes,2,opt,name=TradeNo" json:"TradeNo,omitempty"`
	Title             string `protobuf:"bytes,3,opt,name=Title" json:"Title,omitempty"`
	OfficialAccountId int64  `protobuf:"varint,4,opt,name=OfficialAccountId" json:"OfficialAccountId,omitempty"`
	TransactionId     string `protobuf:"bytes,5,opt,name=TransactionId" json:"TransactionId,omitempty"`
}

func (m *FabricPatternPayInfo) Reset()                    { *m = FabricPatternPayInfo{} }
func (m *FabricPatternPayInfo) String() string            { return proto.CompactTextString(m) }
func (*FabricPatternPayInfo) ProtoMessage()               {}
func (*FabricPatternPayInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *FabricPatternPayInfo) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *FabricPatternPayInfo) GetTradeNo() string {
	if m != nil {
		return m.TradeNo
	}
	return ""
}

func (m *FabricPatternPayInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *FabricPatternPayInfo) GetOfficialAccountId() int64 {
	if m != nil {
		return m.OfficialAccountId
	}
	return 0
}

func (m *FabricPatternPayInfo) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

// 微信公众号JSAPI支付参数
type WechatJSAPIParamInfo struct {
	AppId     string `protobuf:"bytes,1,opt,name=AppId" json:"AppId,omitempty"`
	TimeStamp string `protobuf:"bytes,2,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
	NonceStr  string `protobuf:"bytes,3,opt,name=NonceStr" json:"NonceStr,omitempty"`
	Package   string `protobuf:"bytes,4,opt,name=Package" json:"Package,omitempty"`
	SignType  string `protobuf:"bytes,5,opt,name=SignType" json:"SignType,omitempty"`
	PaySign   string `protobuf:"bytes,6,opt,name=PaySign" json:"PaySign,omitempty"`
}

func (m *WechatJSAPIParamInfo) Reset()                    { *m = WechatJSAPIParamInfo{} }
func (m *WechatJSAPIParamInfo) String() string            { return proto.CompactTextString(m) }
func (*WechatJSAPIParamInfo) ProtoMessage()               {}
func (*WechatJSAPIParamInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *WechatJSAPIParamInfo) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *WechatJSAPIParamInfo) GetTimeStamp() string {
	if m != nil {
		return m.TimeStamp
	}
	return ""
}

func (m *WechatJSAPIParamInfo) GetNonceStr() string {
	if m != nil {
		return m.NonceStr
	}
	return ""
}

func (m *WechatJSAPIParamInfo) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *WechatJSAPIParamInfo) GetSignType() string {
	if m != nil {
		return m.SignType
	}
	return ""
}

func (m *WechatJSAPIParamInfo) GetPaySign() string {
	if m != nil {
		return m.PaySign
	}
	return ""
}

// 微信公众号Native支付参数
type WechatNativeParamInfo struct {
	CodeUrl string `protobuf:"bytes,1,opt,name=CodeUrl" json:"CodeUrl,omitempty"`
}

func (m *WechatNativeParamInfo) Reset()                    { *m = WechatNativeParamInfo{} }
func (m *WechatNativeParamInfo) String() string            { return proto.CompactTextString(m) }
func (*WechatNativeParamInfo) ProtoMessage()               {}
func (*WechatNativeParamInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *WechatNativeParamInfo) GetCodeUrl() string {
	if m != nil {
		return m.CodeUrl
	}
	return ""
}

// 通过公司ID和用户ID获取用户openid
type UserOpenidInfo struct {
	UserId    int64  `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	CompanyId int64  `protobuf:"varint,2,opt,name=CompanyId" json:"CompanyId,omitempty"`
	Openid    string `protobuf:"bytes,3,opt,name=Openid" json:"Openid,omitempty"`
}

func (m *UserOpenidInfo) Reset()                    { *m = UserOpenidInfo{} }
func (m *UserOpenidInfo) String() string            { return proto.CompactTextString(m) }
func (*UserOpenidInfo) ProtoMessage()               {}
func (*UserOpenidInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *UserOpenidInfo) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserOpenidInfo) GetCompanyId() int64 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

func (m *UserOpenidInfo) GetOpenid() string {
	if m != nil {
		return m.Openid
	}
	return ""
}

// 权限模块
// 用户登录后，构建shiro三元表<用户ID-功能ID，实体ID集合={公司ID}>
type GrbacUserRel struct {
	UserId    int64  `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	CompanyId int64  `protobuf:"varint,2,opt,name=CompanyId" json:"CompanyId,omitempty"`
	Code      string `protobuf:"bytes,3,opt,name=Code" json:"Code,omitempty"`
}

func (m *GrbacUserRel) Reset()                    { *m = GrbacUserRel{} }
func (m *GrbacUserRel) String() string            { return proto.CompactTextString(m) }
func (*GrbacUserRel) ProtoMessage()               {}
func (*GrbacUserRel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *GrbacUserRel) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GrbacUserRel) GetCompanyId() int64 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

func (m *GrbacUserRel) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// 用于公司ID与总经理列表， 当天营业额统计报表
type GrbacUserRels struct {
	GrbacUserRels []*GrbacUserRel `protobuf:"bytes,1,rep,name=GrbacUserRels" json:"GrbacUserRels,omitempty"`
}

func (m *GrbacUserRels) Reset()                    { *m = GrbacUserRels{} }
func (m *GrbacUserRels) String() string            { return proto.CompactTextString(m) }
func (*GrbacUserRels) ProtoMessage()               {}
func (*GrbacUserRels) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GrbacUserRels) GetGrbacUserRels() []*GrbacUserRel {
	if m != nil {
		return m.GrbacUserRels
	}
	return nil
}

// 公众号与公司关系消息体
type CompanyAndOfficialAccountRel struct {
	CompanyId         int64 `protobuf:"varint,1,opt,name=CompanyId" json:"CompanyId,omitempty"`
	OfficialAccountId int64 `protobuf:"varint,2,opt,name=OfficialAccountId" json:"OfficialAccountId,omitempty"`
}

func (m *CompanyAndOfficialAccountRel) Reset()                    { *m = CompanyAndOfficialAccountRel{} }
func (m *CompanyAndOfficialAccountRel) String() string            { return proto.CompactTextString(m) }
func (*CompanyAndOfficialAccountRel) ProtoMessage()               {}
func (*CompanyAndOfficialAccountRel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CompanyAndOfficialAccountRel) GetCompanyId() int64 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

func (m *CompanyAndOfficialAccountRel) GetOfficialAccountId() int64 {
	if m != nil {
		return m.OfficialAccountId
	}
	return 0
}

func init() {
	proto.RegisterType((*User)(nil), "igrpc.User")
	proto.RegisterType((*UserInfo)(nil), "igrpc.UserInfo")
	proto.RegisterType((*Users)(nil), "igrpc.Users")
	proto.RegisterType((*Company)(nil), "igrpc.Company")
	proto.RegisterType((*CompanyIds)(nil), "igrpc.CompanyIds")
	proto.RegisterType((*StorageEnableInfo)(nil), "igrpc.StorageEnableInfo")
	proto.RegisterType((*ShopInfo)(nil), "igrpc.ShopInfo")
	proto.RegisterType((*ChuanglanSmsInfo)(nil), "igrpc.ChuanglanSmsInfo")
	proto.RegisterType((*ChuanglanConfInfo)(nil), "igrpc.ChuanglanConfInfo")
	proto.RegisterType((*YunpianConfInfo)(nil), "igrpc.YunpianConfInfo")
	proto.RegisterType((*SmsRechargeInfo)(nil), "igrpc.SmsRechargeInfo")
	proto.RegisterType((*FabricPatternPayInfo)(nil), "igrpc.FabricPatternPayInfo")
	proto.RegisterType((*WechatJSAPIParamInfo)(nil), "igrpc.WechatJSAPIParamInfo")
	proto.RegisterType((*WechatNativeParamInfo)(nil), "igrpc.WechatNativeParamInfo")
	proto.RegisterType((*UserOpenidInfo)(nil), "igrpc.UserOpenidInfo")
	proto.RegisterType((*GrbacUserRel)(nil), "igrpc.GrbacUserRel")
	proto.RegisterType((*GrbacUserRels)(nil), "igrpc.GrbacUserRels")
	proto.RegisterType((*CompanyAndOfficialAccountRel)(nil), "igrpc.CompanyAndOfficialAccountRel")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AccountGrpc service

type AccountGrpcClient interface {
	// rpc GetCompanyByCompanyId(Company) returns (Company);
	GetCompanyNameByCompanyId(ctx context.Context, in *Integer32, opts ...grpc.CallOption) (*String, error)
	AddUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserInfo, error)
}

type accountGrpcClient struct {
	cc *grpc.ClientConn
}

func NewAccountGrpcClient(cc *grpc.ClientConn) AccountGrpcClient {
	return &accountGrpcClient{cc}
}

func (c *accountGrpcClient) GetCompanyNameByCompanyId(ctx context.Context, in *Integer32, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := grpc.Invoke(ctx, "/igrpc.AccountGrpc/GetCompanyNameByCompanyId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountGrpcClient) AddUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := grpc.Invoke(ctx, "/igrpc.AccountGrpc/AddUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountGrpc service

type AccountGrpcServer interface {
	// rpc GetCompanyByCompanyId(Company) returns (Company);
	GetCompanyNameByCompanyId(context.Context, *Integer32) (*String, error)
	AddUser(context.Context, *UserInfo) (*UserInfo, error)
}

func RegisterAccountGrpcServer(s *grpc.Server, srv AccountGrpcServer) {
	s.RegisterService(&_AccountGrpc_serviceDesc, srv)
}

func _AccountGrpc_GetCompanyNameByCompanyId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Integer32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountGrpcServer).GetCompanyNameByCompanyId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/igrpc.AccountGrpc/GetCompanyNameByCompanyId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountGrpcServer).GetCompanyNameByCompanyId(ctx, req.(*Integer32))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountGrpc_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountGrpcServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/igrpc.AccountGrpc/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountGrpcServer).AddUser(ctx, req.(*UserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountGrpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "igrpc.AccountGrpc",
	HandlerType: (*AccountGrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCompanyNameByCompanyId",
			Handler:    _AccountGrpc_GetCompanyNameByCompanyId_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _AccountGrpc_AddUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account.proto",
}

func init() { proto.RegisterFile("account.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1025 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x96, 0xed, 0xa4, 0x4d, 0x4e, 0xda, 0x6d, 0x3b, 0x5b, 0x56, 0xa6, 0xea, 0x45, 0xb1, 0xb8,
	0x88, 0x0a, 0xaa, 0xa0, 0x2b, 0x21, 0x81, 0xb8, 0x49, 0xc3, 0x52, 0xb2, 0xa8, 0x6d, 0xb0, 0xb3,
	0xfc, 0xdc, 0x20, 0x4d, 0xec, 0x89, 0x3b, 0xac, 0x3d, 0x63, 0x8d, 0x27, 0x0b, 0x79, 0x05, 0x2e,
	0xb9, 0x45, 0xbc, 0x03, 0x57, 0xbc, 0x03, 0xaf, 0xc1, 0x93, 0xa0, 0xf9, 0xb1, 0xe3, 0xa4, 0xc9,
	0xae, 0x76, 0xaf, 0xe2, 0xef, 0x3b, 0x99, 0x33, 0xdf, 0xf9, 0xce, 0xfc, 0xc1, 0x3e, 0x8e, 0x63,
	0x3e, 0x67, 0xf2, 0xa2, 0x10, 0x5c, 0x72, 0xd4, 0xa6, 0xa9, 0x28, 0xe2, 0x93, 0xbd, 0x98, 0xe7,
	0x39, 0x67, 0x86, 0x0c, 0xfe, 0x70, 0xa1, 0xf5, 0xa2, 0x24, 0x02, 0x3d, 0x81, 0x1d, 0xf5, 0x3b,
	0x4a, 0x7c, 0xe7, 0xcc, 0xe9, 0x7b, 0xa1, 0x45, 0x08, 0x41, 0x6b, 0xb2, 0x28, 0x88, 0xef, 0x6a,
	0x56, 0x7f, 0xa3, 0x13, 0xe8, 0x84, 0x24, 0xbb, 0x13, 0xe9, 0x28, 0xf1, 0x3d, 0xcd, 0xd7, 0x18,
	0xf9, 0xb0, 0x1b, 0xcd, 0xa7, 0x7a, 0x48, 0x4b, 0x87, 0x2a, 0xa8, 0x32, 0x0d, 0x79, 0x42, 0xfc,
	0xf6, 0x99, 0xd3, 0xef, 0x86, 0xfa, 0x5b, 0x71, 0xb7, 0x38, 0x27, 0xfe, 0x8e, 0xe1, 0xd4, 0x37,
	0x3a, 0x85, 0xee, 0x90, 0xe7, 0x05, 0x66, 0x8b, 0x51, 0xe2, 0xef, 0xea, 0x1c, 0x4b, 0x02, 0xf5,
	0xd5, 0xdc, 0x65, 0xc1, 0x59, 0x49, 0xfc, 0xce, 0x99, 0xd3, 0xef, 0x5d, 0xee, 0x5d, 0xe8, 0xc2,
	0x2e, 0x42, 0x52, 0x64, 0x8b, 0xb0, 0x8e, 0xaa, 0x8a, 0x6e, 0xf8, 0x94, 0x66, 0xc4, 0xef, 0xea,
	0xec, 0x16, 0xa1, 0x33, 0xe8, 0xd9, 0x74, 0x7a, 0x6a, 0xd0, 0xc1, 0x26, 0x15, 0xfc, 0xee, 0x42,
	0x47, 0x97, 0xcf, 0x66, 0x7c, 0xcd, 0x98, 0xf6, 0x46, 0x63, 0xda, 0x5b, 0x8c, 0x69, 0x6f, 0x37,
	0xa6, 0xfd, 0xf6, 0xc6, 0x1c, 0x43, 0xfb, 0x59, 0x8e, 0x69, 0xa6, 0x4d, 0xe9, 0x86, 0x06, 0x6c,
	0x2d, 0xf3, 0x04, 0x3a, 0x63, 0x5c, 0x96, 0xbf, 0x72, 0x91, 0xd8, 0x1a, 0x6b, 0xac, 0xb2, 0x7f,
	0x45, 0xca, 0xd8, 0xef, 0x99, 0xec, 0xea, 0x5b, 0xe5, 0x89, 0x24, 0x96, 0xf3, 0xd2, 0xdf, 0x33,
	0x75, 0x1a, 0x14, 0x9c, 0x43, 0x5b, 0x55, 0x5c, 0xa2, 0x0f, 0xec, 0x87, 0xef, 0x9c, 0x79, 0xfd,
	0xde, 0x65, 0xcf, 0xda, 0xae, 0xb8, 0xd0, 0x44, 0x02, 0x02, 0xbb, 0xd6, 0xc7, 0xd5, 0x2e, 0x1a,
	0xe7, 0x1a, 0x5d, 0xac, 0xca, 0x73, 0x1b, 0xe5, 0x35, 0x3b, 0xeb, 0xbd, 0xae, 0xb3, 0xc1, 0x39,
	0x40, 0x9d, 0xaa, 0x5c, 0x9f, 0xc9, 0x5b, 0x59, 0x2f, 0x41, 0x0c, 0x47, 0x91, 0xe4, 0x02, 0xa7,
	0xe4, 0x19, 0xc3, 0xd3, 0x8c, 0xe8, 0x9e, 0x3e, 0x10, 0xe7, 0xbd, 0x49, 0xdc, 0x29, 0x74, 0x47,
	0xa5, 0xc9, 0x60, 0x5a, 0xdb, 0x09, 0x97, 0x44, 0x70, 0x05, 0x9d, 0xe8, 0x9e, 0x17, 0x3a, 0xf7,
	0x23, 0x70, 0xeb, 0xa4, 0xae, 0xc9, 0xa6, 0xbb, 0xeb, 0x6e, 0xe8, 0xae, 0xb7, 0x9c, 0x21, 0xf8,
	0xcf, 0x81, 0xc3, 0xe1, 0xfd, 0x1c, 0xb3, 0x34, 0xc3, 0x2c, 0xca, 0x4b, 0x9d, 0xec, 0x4b, 0x78,
	0x7f, 0x9c, 0x61, 0x39, 0xe3, 0x22, 0xff, 0x9e, 0x08, 0x3a, 0xa3, 0x31, 0x96, 0x94, 0xb3, 0xa1,
	0xda, 0xd6, 0x76, 0x8e, 0xed, 0x7f, 0x40, 0x9f, 0xc1, 0x93, 0x2a, 0x78, 0x83, 0xc5, 0x4b, 0x22,
	0x29, 0x4b, 0xcd, 0x50, 0xb3, 0x9b, 0xb7, 0x44, 0xd1, 0x17, 0xe0, 0x5b, 0x37, 0xa2, 0xbc, 0x0c,
	0x49, 0x8e, 0x29, 0xab, 0x47, 0x9a, 0xfd, 0xbe, 0x35, 0xbe, 0x6a, 0x6d, 0x6b, 0xcd, 0xda, 0xe0,
	0x5f, 0x17, 0x8e, 0xea, 0x22, 0x87, 0x9c, 0xcd, 0x74, 0x95, 0x3e, 0xec, 0x7e, 0x23, 0x65, 0x31,
	0x28, 0xa8, 0xae, 0xa9, 0x1b, 0x56, 0x10, 0x7d, 0x02, 0x8f, 0xbf, 0x9b, 0x13, 0xb1, 0xb8, 0xc2,
	0x19, 0x66, 0x31, 0xa9, 0xfe, 0x65, 0xbc, 0xdc, 0x14, 0x52, 0x23, 0x9a, 0x46, 0x0c, 0xcc, 0x11,
	0x68, 0x9d, 0xde, 0x14, 0x42, 0x97, 0x70, 0xdc, 0xa4, 0xeb, 0x4d, 0xd3, 0xd2, 0x43, 0x36, 0xc6,
	0xd0, 0x39, 0x1c, 0xd6, 0x9e, 0x55, 0x53, 0x98, 0xed, 0xfb, 0x80, 0x47, 0x1f, 0xc3, 0x51, 0xcd,
	0xd5, 0xc9, 0xcd, 0xbe, 0x7e, 0x18, 0x40, 0x7d, 0x38, 0x08, 0x49, 0x4c, 0xe8, 0x2b, 0x22, 0xaa,
	0x6a, 0xcd, 0x76, 0x5f, 0xa7, 0x83, 0x3f, 0x1d, 0x38, 0xf8, 0x69, 0xce, 0x0a, 0xda, 0x70, 0x32,
	0x80, 0xbd, 0x88, 0xb2, 0x34, 0x23, 0x83, 0x82, 0x7e, 0x4b, 0x16, 0xd6, 0xce, 0x15, 0x4e, 0x9d,
	0x7f, 0xd7, 0x82, 0xcf, 0x0b, 0xfb, 0x17, 0xe3, 0x65, 0x93, 0x6a, 0xf6, 0xc3, 0x5b, 0xed, 0xc7,
	0x06, 0x75, 0xad, 0xcd, 0xea, 0xfe, 0x72, 0xe0, 0x40, 0xaf, 0x8e, 0xf8, 0x1e, 0x8b, 0xd4, 0x6c,
	0xbb, 0x63, 0x68, 0xdf, 0x70, 0x66, 0x65, 0x79, 0xa1, 0x01, 0x6a, 0xb6, 0x89, 0xc0, 0x09, 0xb9,
	0xe5, 0x56, 0x4b, 0x05, 0xd5, 0x91, 0x74, 0x57, 0x10, 0x46, 0x13, 0x2b, 0xc3, 0x22, 0x95, 0x67,
	0x42, 0x65, 0x46, 0xec, 0xdc, 0x06, 0x28, 0x9f, 0xef, 0x66, 0x33, 0x1a, 0x53, 0x9c, 0x59, 0xeb,
	0x47, 0x89, 0x6e, 0x8a, 0x17, 0x3e, 0x0c, 0x04, 0x7f, 0x3b, 0x70, 0xfc, 0x35, 0x9e, 0x0a, 0x1a,
	0x8f, 0xb1, 0x94, 0x44, 0xb0, 0x31, 0x5e, 0xbc, 0x93, 0xc8, 0x5a, 0x8c, 0xf7, 0x46, 0x31, 0xad,
	0x2d, 0x62, 0xd0, 0x87, 0xb0, 0x3f, 0x11, 0x98, 0x95, 0x38, 0x56, 0xab, 0xcc, 0xca, 0xee, 0x86,
	0xab, 0x64, 0xf0, 0x8f, 0x03, 0xc7, 0x3f, 0x28, 0x3f, 0xe5, 0xf3, 0x68, 0x30, 0x1e, 0x8d, 0xb1,
	0xc0, 0x79, 0x25, 0x79, 0x50, 0x14, 0xf6, 0xd4, 0xe9, 0x86, 0x06, 0xa8, 0x9d, 0x38, 0xa1, 0x39,
	0x89, 0x24, 0xce, 0x0b, 0x2b, 0x7a, 0x49, 0xa8, 0xeb, 0xe1, 0x96, 0xb3, 0x98, 0x44, 0x52, 0x58,
	0xe5, 0x35, 0x56, 0xc5, 0x8e, 0x71, 0xfc, 0x12, 0xa7, 0x95, 0xc3, 0x15, 0x54, 0xa3, 0x22, 0x9a,
	0x32, 0x7d, 0x8b, 0x19, 0x8d, 0x35, 0x36, 0xa3, 0x16, 0x0a, 0xda, 0xd5, 0x5d, 0xc1, 0xe0, 0x53,
	0x78, 0xcf, 0xe8, 0xbe, 0xc5, 0x92, 0xbe, 0x22, 0x4b, 0xe1, 0xbe, 0xba, 0x2f, 0x12, 0xf2, 0x42,
	0x64, 0xd5, 0xc6, 0xb7, 0x30, 0xf8, 0x19, 0x1e, 0xa9, 0x2b, 0xc5, 0x34, 0x7c, 0xc3, 0x3d, 0xbc,
	0x7c, 0xa0, 0xac, 0x1c, 0x38, 0xee, 0xfa, 0x59, 0xbe, 0x65, 0x09, 0x05, 0x3f, 0xc2, 0xde, 0xb5,
	0x98, 0xe2, 0x58, 0xdf, 0x5e, 0x24, 0x7b, 0xc7, 0xec, 0xd5, 0xd9, 0xee, 0x2d, 0xcf, 0xf6, 0xe0,
	0x39, 0xec, 0x37, 0x33, 0x97, 0xe8, 0xf3, 0x35, 0xc2, 0xde, 0x9f, 0x8f, 0xed, 0xe5, 0xd6, 0x8c,
	0x85, 0xab, 0xff, 0x0c, 0x7e, 0x81, 0x53, 0x3b, 0xd9, 0x80, 0x25, 0x6b, 0xcb, 0x46, 0xa9, 0x7e,
	0xfd, 0x3d, 0xb6, 0x71, 0x0d, 0xba, 0x5b, 0xd6, 0xe0, 0xe5, 0x6f, 0xd0, 0xb3, 0xe0, 0x5a, 0x14,
	0xb1, 0xba, 0x79, 0xae, 0x89, 0x6c, 0xbc, 0x8a, 0xae, 0x16, 0xcb, 0xcc, 0x87, 0x56, 0xfb, 0x88,
	0x49, 0x92, 0x12, 0xf1, 0xf4, 0xf2, 0x64, 0xdf, 0x32, 0x91, 0x14, 0x94, 0xa5, 0xe8, 0x23, 0xd8,
	0x1d, 0x24, 0x89, 0x7e, 0x58, 0x1e, 0x34, 0xde, 0x09, 0xaa, 0x91, 0x27, 0xeb, 0xc4, 0x74, 0x47,
	0x3f, 0x45, 0x9f, 0xfe, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x78, 0x08, 0x7a, 0x82, 0xb0, 0x0a, 0x00,
	0x00,
}
